{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalStatus.js","utils/format.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","a","axios","get","res","data","response","id","delete","config","headers","post","Provider","value","getTransactions","deleteTransaction","addTransaction","numberWithCommas","x","toString","replace","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","useEffect","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAEaA,EAAS,WAClB,OACI,gD,6CCJO,WAACC,EAAOC,GACnB,OAAOA,EAAOC,MACV,IAAK,mBACL,OAAO,eACAF,EADP,CAEIG,SAAS,EACTC,aAAcH,EAAOI,UAEzB,IAAK,qBACL,OAAO,eACAL,EADP,CAEII,aAAcJ,EAAMI,aAAaE,QAAO,SAAAC,GAAW,OAAIA,EAAYC,MAAQP,EAAOI,aAEtF,IAAK,kBACD,OAAO,eACAL,EADP,CAEII,aAAa,GAAD,mBAAMJ,EAAMI,cAAZ,CAA0BH,EAAOI,YAErD,IAAK,oBACL,OAAO,eACAL,EADP,CAEIS,MAAOR,EAAOI,UAElB,QACI,OAAOL,I,gBCpBbU,EAAe,CACjBN,aAAc,GACdK,MAAO,KACPN,SAAS,GAGAQ,EAAgBC,wBAAcF,GAI9BG,EAAiB,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EAChBC,qBAAWC,EAAYN,GADP,mBACnCV,EADmC,KAC5BiB,EAD4B,iDAI1C,4BAAAC,EAAA,+EAE0BC,IAAMC,IAAI,wBAFpC,OAEcC,EAFd,OAGQJ,EAAS,CACLf,KAAM,mBACNG,QAASgB,EAAIC,KAAKA,OAL9B,gDAQQL,EAAS,CACLf,KAAM,oBACNG,QAAS,KAAIkB,SAASD,KAAKb,QAVvC,0DAJ0C,kEAkB1C,WAAkCe,GAAlC,SAAAN,EAAA,+EAEcC,IAAMM,OAAN,+BAAqCD,IAFnD,OAGQP,EAAU,CACNf,KAAM,qBACNG,QAASmB,IALrB,+CAQQP,EAAS,CACLf,KAAM,oBACNG,QAAS,KAAIkB,SAASD,KAAKb,QAVvC,yDAlB0C,kEAmC1C,WAA+BF,GAA/B,iBAAAW,EAAA,6DACUQ,EAAS,CACXC,QAAS,CACL,eAAgB,qBAH5B,kBAO0BR,IAAMS,KAAK,uBAAwBrB,EAAamB,GAP1E,OAOcL,EAPd,OAQQJ,EAAU,CACNf,KAAM,kBACNG,QAASgB,EAAIC,KAAKA,OAV9B,gDAaQL,EAAS,CACLf,KAAM,oBACNG,QAAS,KAAIkB,SAASD,KAAKb,QAfvC,0DAnC0C,sBAuD1C,OACI,kBAACE,EAAckB,SAAf,CAAwBC,MAAO,CAC3B1B,aAAcJ,EAAMI,aACpBK,MAAOT,EAAMS,MACbN,QAASH,EAAMG,QACf4B,gBA5DkC,2CA6DlCC,kBA7DkC,4CA8DlCC,eA9DkC,8CAiEjCnB,IC/EN,SAASoB,EAAiBC,GAC7B,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,KCGlD,IAAMC,EAAS,WAAO,IAKnBC,EAJiBC,qBAAW7B,GAA3BP,aAEsBqC,KAAI,SAAAlC,GAAW,OAAIA,EAAYmC,UAEtCC,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GAAGC,QAAQ,GAAGT,QAAQ,IAAK,KACtF,OACI,6BACI,4CACA,gCAAMH,EAAiBK,MCTrBQ,EAAkB,WAAO,IAE7BC,EADiBR,qBAAW7B,GAA3BP,aACsBqC,KAAI,SAAAlC,GAAW,OAAIA,EAAYmC,UAGtDO,EAASD,EACd1C,QAAO,SAAAuC,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,GACrCC,QAAQ,GACRT,QAAQ,IAAK,KAGRa,IAEsC,EAF3BF,EAChB1C,QAAO,SAAAuC,GAAI,OAAIA,EAAO,KACtBF,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAOC,IAAO,IACrCC,QAAQ,GACRT,QAAQ,IAAK,KAEd,OACI,yBAAKc,UAAU,qBACX,6BACI,sCACA,uBAAGA,UAAU,cAAb,KAA6BjB,EAAiBe,KAElD,6BACI,uCACA,uBAAGE,UAAU,eAAb,KAA8BjB,EAAiBgB,OC1BlDE,EAAc,SAAC,GAAmB,IAAlB7C,EAAiB,EAAjBA,YACnB8C,EAAO9C,EAAYmC,OAAQ,EAAI,IAAM,IACpCV,EAAqBQ,qBAAW7B,GAAhCqB,kBACP,OACI,wBAAImB,UAAW5C,EAAYmC,OAAS,EAAI,QAAU,QAC7CnC,EAAY+C,KADjB,IACuB,8BAAOD,EAAMnB,EAAiBqB,KAAKC,IAAIjD,EAAYmC,SAAnD,MACnB,4BACIS,UAAU,aACVM,QAAS,kBAAKzB,EAAkBzB,EAAYC,OAFhD,OCPCkD,EAAkB,WAAO,IAAD,EACOlB,qBAAW7B,GAA5CP,EAD0B,EAC1BA,aAAc2B,EADY,EACZA,gBAKrB,OAJA4B,qBAAU,WACN5B,MAEC,IAED,6BACI,uCACA,wBAAIoB,UAAU,QACT/C,EAAaqC,KAAI,SAAAlC,GAAW,OAAK,kBAAC,EAAD,CAAaqD,IAAKrD,EAAYC,IAAKD,YAAaA,UCXrFsD,EAAgB,WAAO,IAAD,EACPC,mBAAS,IADF,mBACxBR,EADwB,KAClBS,EADkB,OAEHD,mBAAS,IAFN,mBAExBpB,EAFwB,KAEhBsB,EAFgB,KAGxB/B,EAAkBO,qBAAW7B,GAA7BsB,eAYP,OACI,6BACI,mDACA,0BAAMgC,SAbG,SAAAC,GACbA,EAAEC,iBAEF,IAAMC,EAAiB,CACnB5C,GAAI+B,KAAKc,MAAsB,IAAhBd,KAAKe,UACpBhB,OACAZ,QAASA,GAEbT,EAAemC,KAMP,yBAAKjB,UAAU,gBACX,2BAAOoB,QAAQ,QAAf,QACA,2BACIrE,KAAK,OACL4B,MAAOwB,EACPkB,SAAU,SAACN,GAAD,OAAOH,EAAQG,EAAEO,OAAO3C,QAClC4C,YAAY,mBAEpB,yBAAKvB,UAAU,gBACX,2BAAOoB,QAAQ,UAAf,SACI,6BADJ,2CAIA,2BACIrE,KAAK,SACL4B,MAAOY,EACP8B,SAAU,SAACN,GAAD,OAAOF,EAAUE,EAAEO,OAAO3C,QACpC4C,YAAY,qBAEpB,4BAAQvB,UAAU,OAAlB,sB,MCjBDwB,MAdf,WACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAKxB,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCZRyB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.991e6cf3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>Expense Tracker</h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch(action.type){\r\n        case 'GET_TRANSACTIONS' :\r\n        return {\r\n            ...state,\r\n            loading: false,\r\n            transactions: action.payload\r\n        }\r\n        case 'DELETE_TRANSACTION':\r\n        return {\r\n            ...state,\r\n            transactions: state.transactions.filter(transaction => transaction._id !== action.payload)\r\n          }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload]\r\n            }\r\n        case 'TRANSACTION_ERROR':\r\n        return {\r\n            ...state,\r\n            error: action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import React, {createContext, useReducer} from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider Component\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    //Actions\r\n\r\n    async function getTransactions(){\r\n        try {\r\n            const res = await axios.get('/api/v1/transactions');\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n    async function deleteTransaction (id) {\r\n        try {\r\n            await axios.delete(`/api/v1/transactions/${id}`);\r\n            dispatch ({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    \r\n        \r\n    }\r\n\r\n    async function addTransaction (transaction) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        try {\r\n            const res = await axios.post('/api/v1/transactions', transaction, config);\r\n            dispatch ({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            })\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n        \r\n    }\r\n    return(\r\n        <GlobalContext.Provider value={{\r\n            transactions: state.transactions,\r\n            error: state.error,\r\n            loading: state.loading,\r\n            getTransactions,\r\n            deleteTransaction, \r\n            addTransaction, \r\n            \r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}","export function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n  }","import React  ,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalStatus';\r\nimport {numberWithCommas} from '../utils/format';\r\n\r\nexport const Balance =() => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    //Dejo todos los valores en un array\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    //Sumo los valores del array y lo dejo en una variable\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2).replace(\".\", \",\");;\r\n    return (\r\n        <div>\r\n            <h4>Your Balance</h4>\r\n            <h1>${numberWithCommas(total)}</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React  ,{useContext} from 'react'\r\nimport {GlobalContext} from '../context/GlobalStatus';\r\nimport {numberWithCommas} from '../utils/format';\r\n\r\nexport  const IncomeExpenses  = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    //Entradas\r\n    const income = amounts\r\n    .filter(item => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2)\r\n    .replace(\".\", \",\");\r\n\r\n    //Salidas\r\n    const expense = (amounts\r\n    .filter(item => item < 0)\r\n    .reduce((acc, item) => (acc += item), 0) * -1)\r\n    .toFixed(2)\r\n    .replace(\".\", \",\");\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p className=\"money plus\">+${numberWithCommas(income)}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p className=\"money minus\">-${numberWithCommas(expense)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React ,{useContext}from 'react'\r\nimport {GlobalContext} from '../context/GlobalStatus';\r\nimport {numberWithCommas} from '../utils/format';\r\n\r\nexport const Transaction = ({transaction}) => {\r\n    const sign = transaction.amount <0 ? '-' : '+';\r\n    const {deleteTransaction} = useContext(GlobalContext);\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {transaction.text} <span>{sign}{numberWithCommas(Math.abs(transaction.amount))} $</span>\r\n            <button \r\n                className=\"delete-btn\"\r\n                onClick={()=> deleteTransaction(transaction._id)}\r\n            > \r\n                x\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n","import React ,{useContext, useEffect} from 'react'\r\nimport {GlobalContext} from '../context/GlobalStatus';\r\nimport {Transaction} from './Transaction';\r\nexport const TransactionList = () => {\r\n    const {transactions, getTransactions} = useContext(GlobalContext);\r\n    useEffect(() => {\r\n        getTransactions();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      }, []);\r\n    return (\r\n        <div>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (<Transaction key={transaction._id} transaction={transaction} />))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useContext } from 'react'\r\nimport {GlobalContext} from '../context/GlobalStatus';\r\nexport const AddTransaction =() => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const {addTransaction} = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text, \r\n            amount: +amount\r\n        }\r\n        addTransaction(newTransaction);\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={text} \r\n                        onChange={(e) => setText(e.target.value)} \r\n                        placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">Amount \r\n                        <br />\r\n                        (negative - expense, positive - income)\r\n                    </label>\r\n                    <input \r\n                        type=\"number\"\r\n                        value={amount} \r\n                        onChange={(e) => setAmount(e.target.value)} \r\n                        placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport {Header} from './components/Header';\nimport {Balance} from './components/Balance';\nimport {IncomeExpenses} from './components/IncomeExpenses';\nimport {TransactionList} from './components/TransactionList';\nimport {AddTransaction} from './components/AddTransaction';\nimport {GlobalProvider} from './context/GlobalStatus'\nimport './App.css';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}